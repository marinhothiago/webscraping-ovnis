# -*- coding: utf-8 -*-
"""5.10 - Dados no MongoDB.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Z3-blcTGv_vPXQNeHY7fwCwaTsY1FaSX
"""

#Instala as dependencias necessarias para conexao com o banco de dados
!curl ipecho.net/plain 
!pip install pymongo 
!pip install dnspython

import pandas as pd 
import pymongo 
from pymongo import MongoClient 
import pprint 

#abrindo conexão com Atlas
client = pymongo.MongoClient("mongodb://matheus:123@cluster0-shard-00-00.ja2pz.mongodb.net:27017,cluster0-shard-00-01.ja2pz.mongodb.net:27017,cluster0-shard-00-02.ja2pz.mongodb.net:27017/<dbname>?ssl=true&replicaSet=atlas-13rhks-shard-0&authSource=admin&retryWrites=true&w=majority")
#criando um Banco de dados chamado ovni 
db = client.ovni 
#Criando uma coleção chamada ovnis.  
ovnis = db.ovnis 
#Leitura do arquivo df_OVNI_preparado.csv
df_ovnis = pd.read_csv('df_OVNI_preparado.csv') 
ovnis.insert_many(df_OVNI_preparado.to_dict('records'))

#Contar e mostrar quantos documentos há na coleção ovnis.
print("Número de Documentos na coleção ovnis:", ovnis.count_documents({}))

#Resgatar todos os documentos (registros) da coleção ovnis e ordenar por tipo (shape).
shapes = ovnis.find({}).sort('Shape')

for shape in shapes:
  pprint.pprint(shape)

# Verificar quantas ocorrências existem por estado.
# Usa a função aggregate() para manipular as collections e adiciona o valor 1 para dizer ao $sum para somar todos os registros.
results = db.ovnis.aggregate([{
                    "$group": {
                        "_id": "$State",
                        "Views": {"$sum": 1}                    
                    }                       
}])

for result in results:
  print(result)

# Buscar todas as ocorrências da cidade Phoenix.
phoenix = ovnis.find({"City": "Phoenix"}).sort("shape")
for p in phoenix:
  pprint.pprint(p)

# Buscar as ocorrências do estado da Califórnia e ocultar o id de cada documento (registro).
# para ocultar o id basta passar o valor 0 na collection.
california = ovnis.find({"State": "CA"},{"_id": 0}).sort("Shape")
for ca in california:
  pprint.pprint(ca)